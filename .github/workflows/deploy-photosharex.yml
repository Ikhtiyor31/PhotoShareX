name: GCP CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-northeast3
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: asia-northeast3
  DEPLOYMENT_NAME: photosharex
  REPOSITORY: photosharexapi
  IMAGE: photosharex_api
  IMAGE_TAG: latest
  MAIL_ADDRESS: ${{ secrets.MAIL_ADDRESS }}
  MAIL_PASS: ${{ secrets.MAIL_PASS }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: Photosharex
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Create credentials.json
        run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > credentials.json

      - name: Docker configuration
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
          # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker compose -f "docker-compose.yml" build
        env:
          MAIL_ADDRESS: ${{ env.MAIL_ADDRESS }}
          MAIL_PASS: ${{ env.MAIL_PASS }}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GITHUB_SHA: ${{ github.sha }}

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA

      - name: Update k8s/photosharex-deployment.yaml.yaml with GITHUB_SHA & PROJECT_ID
        run: |-
          sed -i 's/\${IMAGE_TAG}/'"$GITHUB_SHA"'/g' k8s/photosharex-deployment.yaml
          sed -i -e 's/${PROJECT_ID}/'"$PROJECT_ID"'/g' k8s/photosharex-deployment.yaml
      - name: Deploy
        run: |-
          kubectl apply -f k8s/postgres-config.yaml
          kubectl apply -f k8s/postgres-secret.yaml
          kubectl apply -f k8s/postgres.yaml
          kubectl apply -f k8s/rabbitmq.yaml
          kubectl apply -f k8s/photosharex-deployment.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get pods

